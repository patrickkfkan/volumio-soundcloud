{"version":3,"file":"RootViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/RootViewHandler.ts"],"names":[],"mappings":"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","sourcesContent":["import sc from '../../../SoundCloudContext';\nimport SelectionEntity from '../../../entities/SelectionEntity';\nimport { ModelType } from '../../../model';\nimport BaseViewHandler from './BaseViewHandler';\nimport { SelectionView } from './SelectionViewHandler';\nimport { TrackView } from './TrackViewHandler';\nimport View from './View';\nimport { RenderedList, RenderedPage } from './ViewHandler';\nimport ViewHandlerFactory from './ViewHandlerFactory';\nimport ViewHelper from './ViewHelper';\nimport { RendererType } from './renderers';\nimport { RenderedListItem } from './renderers/BaseRenderer';\n\nexport type RootView = View;\n\nexport default class RootViewHandler extends BaseViewHandler<RootView> {\n\n  async browse(): Promise<RenderedPage> {\n    const fetches = [\n      this.#getTopFeaturedTracks(),\n      this.#getMixedSelections()\n    ];\n\n    const fetchResults = await Promise.all(fetches);\n    const lists = fetchResults.reduce<RenderedList[]>((result, list) => {\n      result.push(...list);\n      return result;\n    }, []);\n\n    return {\n      navigation: {\n        prev: { uri: '/' },\n        lists\n      }\n    };\n  }\n\n  async #getTopFeaturedTracks(): Promise<RenderedList[]> {\n    try {\n      const trackView: TrackView = {\n        name: 'tracks',\n        topFeatured: '1',\n        inSection: '1',\n        title: sc.getI18n('SOUNDCLOUD_LIST_TITLE_TOP_FEATURED_TRACKS')\n      };\n      const tracksUri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(trackView, true)}`;\n      const page = await ViewHandlerFactory.getHandler(tracksUri).browse();\n      const list = page.navigation?.lists?.[0];\n      if (list && list.items.length > 0) {\n        if (ViewHelper.supportsEnhancedTitles()) {\n          list.title = `\n          <div style=\"width: 100%;\">\n              <div style=\"padding-bottom: 8px; border-bottom: 1px solid;\">\n                  ${list.title}\n              </div>\n          </div>`;\n        }\n        return [ list ];\n      }\n      return [];\n    }\n    catch (error: any) {\n      sc.getLogger().error(sc.getErrorMessage('[soundcloud] Failed to get top featured tracks in root view:', error, true));\n      return [];\n    }\n  }\n\n  async #getMixedSelections(): Promise<RenderedList[]> {\n    try {\n      const selections = await this.getModel(ModelType.Selection).getSelections({ mixed: true });\n      const lists = selections.items.reduce<RenderedList[]>((result, selection, index) => {\n        if (selection.items.length > 0) {\n          result.push(this.#getListFromSelection(selection, index));\n        }\n        return result;\n      }, []);\n      return lists;\n    }\n    catch (error: any) {\n      sc.getLogger().error(sc.getErrorMessage('[soundcloud] Failed to get selections in root view:', error, true));\n      return [];\n    }\n  }\n\n  #getListFromSelection(selection: SelectionEntity, index: number): RenderedList {\n    const limit = sc.getConfigValue('itemsPerSection');\n    const slice = selection.items.slice(0, limit);\n    const renderer = this.getRenderer(RendererType.Playlist);\n    const listItems = slice.reduce<RenderedListItem[]>((result, item) => {\n      const rendered = renderer.renderToListItem(item);\n      if (rendered) {\n        result.push(rendered);\n      }\n      return result;\n    }, []);\n    if (selection.id && limit < selection.items.length) {\n      const nextPageRef = this.constructPageRef(limit.toString(), 0);\n      if (nextPageRef) {\n        const selectionView: SelectionView = {\n          name: 'selections',\n          selectionId: selection.id,\n          pageRef: nextPageRef\n        };\n        const nextUri = `${this.uri}/${ViewHelper.constructUriSegmentFromView(selectionView)}`;\n        listItems.push(this.constructNextPageItem(nextUri));\n      }\n    }\n    let listTitle;\n    if (selection.title) {\n      if (!ViewHelper.supportsEnhancedTitles()) {\n        listTitle = selection.title;\n      }\n      else if (index === 0) {\n        listTitle = `\n              <div style=\"width: 100%;\">\n                  <div style=\"padding-bottom: 8px; border-bottom: 1px solid; margin-bottom: 24px;\">\n                      ${sc.getI18n('SOUNDCLOUD_TRENDING_PLAYLISTS')}\n                  </div>\n                  <span style=\"font-size: 16px; color: #bdbdbd;\">${selection.title}</span>\n              </div>`;\n      }\n      else {\n        listTitle = `<span style=\"font-size: 16px; color: #bdbdbd;\">${selection.title}</span>`;\n      }\n    }\n    else {\n      listTitle = sc.getI18n('SOUNDCLOUD_TRENDING_PLAYLISTS');\n    }\n    return {\n      title: listTitle,\n      availableListViews: [ 'list', 'grid' ],\n      items: listItems\n    };\n  }\n}\n"]}