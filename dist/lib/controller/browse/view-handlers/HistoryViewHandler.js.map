{"version":3,"file":"HistoryViewHandler.js","sourceRoot":"","sources":["../../../../../src/lib/controller/browse/view-handlers/HistoryViewHandler.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,mFAA4C;AAI5C,0CAA2C;AAE3C,wEAAgD;AAGhD,2CAA2C;AAO3C,MAAqB,kBAAmB,SAAQ,yBAA4B;IAA5E;;;IA8DA,CAAC;IA5DC,KAAK,CAAC,MAAM;QACV,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;QAElC,IAAI,IAAI,EAAE;YACR,OAAO,uBAAA,IAAI,qEAAY,MAAhB,IAAI,EAAa,IAAI,EAAE,KAAK,CAAC,CAAC;SACtC;QAED,MAAM,IAAI,GAAG,CAAC,MAAM,uBAAA,IAAI,qEAAY,MAAhB,IAAI,EAAa,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC;QAC3E,MAAM,MAAM,GAAG,CAAC,MAAM,uBAAA,IAAI,qEAAY,MAAhB,IAAI,EAAa,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,EAAE,KAAK,IAAI,EAAE,CAAC;QAE/E,OAAO;YACL,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,CAAC,gBAAgB,EAAE,EAAE;gBACtC,KAAK,EAAE,CAAE,GAAG,IAAI,EAAE,GAAG,MAAM,CAAE;aAC9B;SACF,CAAC;IACJ,CAAC;CA4CF;AA9DD,qCA8DC;gFA1CC,KAAK,yCAAa,IAAqB,EAAE,SAAkB;IACzD,MAAM,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;IACrC,MAAM,SAAS,GAAG,OAAO,EAAE,SAAS,CAAC;IACrC,MAAM,UAAU,GAAG,OAAO,EAAE,UAAU,CAAC;IACvC,MAAM,WAAW,GAA0C,EAAE,IAAI,EAAE,CAAC;IAEpE,IAAI,SAAS,EAAE;QACb,WAAW,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;KAC3C;IACD,IAAI,UAAU,EAAE;QACd,WAAW,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;KAC7C;IAED,IAAI,SAAS,EAAE;QACb,WAAW,CAAC,KAAK,GAAG,2BAAE,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;KAC1D;SACI;QACH,WAAW,CAAC,KAAK,GAAG,2BAAE,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;KACvD;IAED,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,iBAAS,CAAC,OAAO,CAAC,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IACjF,MAAM,IAAI,GAAG,IAAI,CAAC,4BAA4B,CAC5C,KAAK,EACL,uBAAA,IAAI,sEAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAC5B,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,2BAAE,CAAC,OAAO,CAAC,8CAA8C,CAAC,CAAC,CAAC,CAAC,2BAAE,CAAC,OAAO,CAAC,uCAAuC,CAAC,CACpI,CAAC;IAEF,OAAO,IAAI,CAAC;AACd,CAAC,6EAEY,IAAgD;IAC3D,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QACzB,OAAO,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,KAAK,CAAC,CAAC;KAC7C;SACI,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,IAAI,IAAI,CAAC,IAAI,KAAK,iBAAiB,EAAE;QACpE,OAAO,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,QAAQ,CAAC,CAAC;KAChD;SACI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;QAC9B,OAAO,IAAI,CAAC,WAAW,CAAC,wBAAY,CAAC,KAAK,CAAC,CAAC;KAC7C;IACD,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import sc from '../../../SoundCloudContext';\nimport AlbumEntity from '../../../entities/AlbumEntity';\nimport PlaylistEntity from '../../../entities/PlaylistEntity';\nimport TrackEntity from '../../../entities/TrackEntity';\nimport { ModelType } from '../../../model';\nimport { HistoryModelGetPlayHistoryItemsParams } from '../../../model/HistoryModel';\nimport BaseViewHandler from './BaseViewHandler';\nimport View from './View';\nimport { RenderedPage } from './ViewHandler';\nimport { RendererType } from './renderers';\n\nexport interface HistoryView extends View {\n  name: 'history';\n  type?: 'set' | 'track';\n}\n\nexport default class HistoryViewHandler extends BaseViewHandler<HistoryView> {\n\n  async browse(): Promise<RenderedPage> {\n    const { type } = this.currentView;\n\n    if (type) {\n      return this.#browseType(type, false);\n    }\n\n    const sets = (await this.#browseType('set', true)).navigation?.lists || [];\n    const tracks = (await this.#browseType('track', true)).navigation?.lists || [];\n\n    return {\n      navigation: {\n        prev: { uri: this.constructPrevUri() },\n        lists: [ ...sets, ...tracks ]\n      }\n    };\n  }\n\n  async #browseType(type: 'set' | 'track', inSection: boolean) {\n    const { pageRef } = this.currentView;\n    const pageToken = pageRef?.pageToken;\n    const pageOffset = pageRef?.pageOffset;\n    const modelParams: HistoryModelGetPlayHistoryItemsParams = { type };\n\n    if (pageToken) {\n      modelParams.pageToken = pageRef.pageToken;\n    }\n    if (pageOffset) {\n      modelParams.pageOffset = pageRef.pageOffset;\n    }\n\n    if (inSection) {\n      modelParams.limit = sc.getConfigValue('itemsPerSection');\n    }\n    else {\n      modelParams.limit = sc.getConfigValue('itemsPerPage');\n    }\n\n    const items = await this.getModel(ModelType.History).getPlayHistory(modelParams);\n    const page = this.buildPageFromLoopFetchResult(\n      items,\n      this.#getRenderer.bind(this),\n      type === 'track' ? sc.getI18n('SOUNDCLOUD_LIST_TITLE_RECENTLY_PLAYED_TRACKS') : sc.getI18n('SOUNDCLOUD_LIST_TITLE_RECENTLY_PLAYED')\n    );\n\n    return page;\n  }\n\n  #getRenderer(item: AlbumEntity | PlaylistEntity | TrackEntity) {\n    if (item.type === 'album') {\n      return this.getRenderer(RendererType.Album);\n    }\n    else if (item.type === 'playlist' || item.type === 'system-playlist') {\n      return this.getRenderer(RendererType.Playlist);\n    }\n    else if (item.type === 'track') {\n      return this.getRenderer(RendererType.Track);\n    }\n    return null;\n  }\n}\n"]}